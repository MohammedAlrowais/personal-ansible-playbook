---
- name: Qtile - Install necessary packages
  apt:
    name:
      - xserver-xorg
      - xinit
      - libpangocairo-1.0-0
      - python3-pip
      - python3-xcffib
      - python3-cairocffi
      - python3-dev
      - build-essential
      - libxkbcommon-dev
      - libxkbcommon-x11-dev
      - pkg-config
      - libffi-dev
    state: present
    update_cache: true

- name: Qtile - Install qtile via pipx
  community.general.pipx:
    name: qtile
    state: present
  become: true
  become_user: "{{ username }}"

- name: Qtile - Add qtile to path
  command:
    cmd: pipx ensurepath
  become: true
  become_user: "{{ username }}"
  changed_when: false

- name: Qtile - Inject required Python packages into qtile environment
  community.general.pipx:
    name: qtile
    state: inject
    inject_packages:
      - psutil
      - qtile_extras
      - dbus-next
      - dbus-fast
  become: true
  become_user: "{{ username }}"

- name: Qtile - Ensure configuration directories exist
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ group }}"
    mode: '0755'
  loop:
    - "{{ qtile_config_directory }}"
    - "{{ qtile_config_directory }}/scripts"
    - "{{ picom_config_directory }}"

- name: Qtile - Copy qtile scripts
  template:
    src: "{{ item }}.j2"
    dest: "{{ qtile_config_directory }}/scripts/{{ item }}"
    owner: "{{ username }}"
    group: "{{ group }}"
    mode: '0755'
  loop:
    - wallpaper.sh
    - autostart.sh

- name: Qtile - Create Qtile desktop entry
  template:
    src: qtile.desktop.j2
    dest: /usr/share/xsessions/qtile.desktop
    mode: '0644'

- name: Qtile - Copy qtile configuration files
  template:
    src: "{{ item }}.j2"
    dest: "{{ qtile_config_directory }}/{{ item }}"
    owner: "{{ username }}"
    group: "{{ group }}"
    mode: '0644'
  loop:
    - colors.py
    - config.py

- name: Qtile - Copy picom configuration file
  template:
    src: picom.conf.j2
    dest: "{{ picom_config_directory }}/picom.conf"
    owner: "{{ username }}"
    group: "{{ group }}"
    mode: '0644'

- name: Qtile - Ensure pipx bin directory is in PATH
  lineinfile:
    path: "/home/{{ username }}/.bashrc"
    line: 'export PATH="$PATH:/home/{{ username }}/.local/bin"'
    state: present
    create: yes
    owner: "{{ username }}"
    group: "{{ group }}"

- name: Qtile - Ensure pipx bin directory is in PATH for zsh users
  lineinfile:
    path: "/home/{{ username }}/.zshrc"
    line: 'export PATH="$PATH:/home/{{ username }}/.local/bin"'
    state: present
    create: yes
    owner: "{{ username }}"
    group: "{{ group }}"
  ignore_errors: yes